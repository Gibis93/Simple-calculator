import Head from 'next/head';
import styles from '../styles/Home.module.scss';
import React, { useState } from 'react';

const calcButtons = [
  ["7", "8", "9", "+"],
  ["4", "5", "6", "-"],
  ["1", "2", "3", "X"],
  [".", "0", "CE", "รท"],
  ["C", "=", "%"]
]

const math = (a, b, sign) =>
  sign === "+" ? a + b : sign === "-" ? a - b : sign === "X" ? a * b : a / b;

export default function Home() {

  const [calc, setCalc] = useState({
    sign: "+",
    num: 0,
    res: 0,
  });
  const [history, setHistory] = useState([])


  const handleClick = (e) => {
    const btn = e.target.value;
    switch (btn) {
      case "+":
      case "-":
      case "X":
      case "รท":
        signClick(btn)
        break;
      case ("CE"):
        backspaceClick(btn)
        break;
      case ("C"):
        resetClick()
        break;
      case ("."):
        commaClick(btn)
        break;
      case ("="):
        resultClick()
        break;
      case ("%"):
        percentageClick()
        break;
      default:
        numClick(btn)
    }
  }

  const signClick = (btn) => {
    setCalc({
      ...calc,
      sign: btn,
      res: !calc.num
        ? calc.res
        : !calc.res
          ? calc.num
          : toLocaleString(
            math(
              Number(calc.res),
              Number(calc.num),
              calc.sign
            )
          ),
      num: 0,
    });
    // setHistory(...history, { sign: btn })
  }
  const backspaceClick = (btn) => {
    console.log('backspace click', btn)
  }

  const resetClick = () => {
    setCalc({
      ...calc,
      sign: "",
      num: 0,
      res: 0,
    });
  }

  const commaClick = (btn) => {
    setCalc({
      ...calc,
      num: !calc.num.toString().includes(".") ? calc.num + btn : calc.num,
    });
  }

  const resultClick = () => {
    if (calc.sign && calc.num) {
      setCalc({
        ...calc,
        res:
          calc.num === "0" && calc.sign === "/"
            ? "Can't divide with 0"
            : math(
              Number(calc.res),
              Number(calc.num),
              calc.sign
            ),
        sign: "",
        num: 0
      });
/*       setHistory({ ...history, num2: calc.num, res: calc.res })
      setCalc({ ...calc, num: 0 })
 */    }
  }

  const percentageClick = () => {
    let num = calc.num ? parseFloat(calc.num) : 0;
    let res = calc.res ? parseFloat(calc.res) : 0;
    setCalc({
      ...calc,
      num: (num /= Math.pow(100, 1)),
      res: (res /= Math.pow(100, 1)),
      sign: "",
    });
  }

  const numClick = (btn) => {
    setCalc({
      ...calc,
      num:
        calc.num === 0 ? btn : calc.num != 0 ? (calc.num + btn) : (calc.num + '.' + btn),
    })
    // setHistory({ ...history, num1: btn })
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Calculator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/564/564429.png" />
      </Head>
      <main className={styles.main}>
        <div className={styles.CalcDisplay}>
          {calc.num ? calc.num : calc.res}
        </div>
        <div className={styles.CalcBody}>
          {calcButtons.flat().map((el, index) =>
            <button key={index} onClick={handleClick} value={el}> {el}</button>
          )
          }
        </div>
      </main>
      {/* <ul>
        {history.length > 0 ? history.map((el, index) =>
          <li key="index"> {el.num1} {el.sign} {el.num2} = {el.res}</li>
        ) : ""}
      </ul> */}
    </div>
  )
}
